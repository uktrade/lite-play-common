@import "js";
@import "../conditionals";
@import "../colours/palette";
@import "../check-your-answers";
@import "../part-navigation";
@import "components/modals";

button,
a.button {
  &.link {
    background: none;
    border: none;
    box-shadow: none;
    color: $link-colour;
    cursor: pointer;
    padding-left: 0px;
    padding-right: 0px;
    text-align: left;
    text-decoration: none;
    font-family: inherit;
    font-size: inherit;
    font-weight: normal;
    line-height: inherit;

    &.underlined {
      text-decoration: underline;
    }

    &:hover {
      background: none;
      color: $link-hover-colour;
    }
  }

  &.link-back {
    background: none;
    border: none;
    box-shadow: none;
    cursor: pointer;
    text-align: left;
    text-decoration: underline;
  }

  &.secondary {
    @include button ($govuk-blue);
  }

  &.tertiary {
    @include button ($grey-3);
    color: $govuk-blue;

    &:link,
    &:hover,
    &:active,
    &:visited {
      color: $govuk-blue;
    }
  }

  &.start-application {
    margin-right: 30px;
  }

  &.button-resume {
    @include bold-24;
    padding: em(7) em(16) em(4) em(16);
  }

  // Fix unwanted button padding in Firefox
  &.secondary::-moz-focus-inner,
  &.tertiary::-moz-focus-inner,
  &.link::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  &.secondary:focus,
  &.tertiary:focus{
    outline: 3px solid $focus-colour;
  }

  // Disabled buttons
  &.secondary[disabled="disabled"] {
    background: $govuk-blue;
  }

  &.tertiary[disabled="disabled"] {
    background: $grey-3;
  }

  &.secondary[disabled="disabled"]:focus,
  &.tertiary[disabled="disabled"]:focus{
    outline: none;
  }
}

.button-list {
  clear: both;

  li {
    display: inline-block;
    margin-right: 1em;
  }
}

h1.heading-tight, h2.heading-tight, h3.heading-tight, h4.heading-tight {
  margin-bottom: 10px;
}

.form-control-wide {
  width: 100%;
}

select.ui-autocomplete-base {
  width: 75%;
  margin-right: 15px;
  @include media(mobile) {
    width: 100%;
    margin-right: inherit;
  }
}

.ui-autocomplete-input {
  @extend .form-control;
  width: 70%;
  margin-right: 15px;
  @include media (mobile) {
    width: 100%;
    margin-right: inherit;
  }
  margin-bottom: 5px;
}

.link-next-to-button {
  display: inline-block;
  margin-left: 50px;
  padding-top: 0.5em;
}

h1, h2, h3, h4, h5, h6 {
  &.section {
    border-bottom: 1px solid #bfc1c3;
    padding-bottom: 5px;

  }
}

input.hidden {
  width: 0px;
  height: 0px;
  margin: 0px;
  padding: 0px;
  outline: none;
  border: 0px;
}

a.not-visited:visited {
  color: $link-colour;
}

// Use to apply a default set of classes to content sourced from a service. Typically used to surround @Html()
// Allows the stored HTML content to be devoid of any styling classes.
.stored-content-container {
  ul, ol {
    @extend .list, .list-bullet;
  }
}

// Related items
.govuk-related-items {
  margin-top: $gutter;
  border-top: 10px solid $govuk-blue;
  padding-top: 5px;

  .heading-medium {
    margin-top: 0.3em;
    margin-bottom: 0.5em;
  }

  li {
    margin-bottom: 10px;
    list-style-type: none;
  }
}

.font-weight-normal {
  font-weight: normal;
}

table.top-align-cells {
  td, th {
    vertical-align: top;
  }
}

.change-answer button.link {
  font-weight: bold;
}

//Account header
.account-header {
  float: right;
  color: $white;

  a:link,
  a:hover,
  a:active,
  a:visited {
    color: $white;
  }
}

@import "components/file-upload";
@import "components/flashes";
